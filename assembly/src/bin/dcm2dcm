#!/bin/sh
# -------------------------------------------------------------------------
# dcm2dcm  Launcher
# -------------------------------------------------------------------------

MAIN_MODULE=org.dcm4che.tool.dcm2dcm
MAIN_JAR=dcm4che-tool-dcm2dcm-${project.version}.jar

DIRNAME="`dirname "$0"`"

# OS specific support (must be 'true' or 'false').
cygwin=false;
case "`uname`" in
    CYGWIN*)
        cygwin=true
        ;;
esac

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
    [ -n "$DCM4CHE_HOME" ] &&
        DCM4CHE_HOME=`cygpath --unix "$DCM4CHE_HOME"`
    [ -n "$JAVA_HOME" ] &&
        JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
fi

# Setup DCM4CHE_HOME
if [ "x$DCM4CHE_HOME" = "x" ]; then
    DCM4CHE_HOME=`cd "$DIRNAME"/..; pwd`
fi

# Setup the JVM
if [ "x$JAVA_HOME" != "x" ]; then
    JAVA=$JAVA_HOME/bin/java
else
    JAVA="java"
fi

# Setup the module path
MP="$DCM4CHE_HOME/lib/$MAIN_JAR"
MP="$MP:$DCM4CHE_HOME/lib/dcm4che-base-${project.version}.jar"
MP="$MP:$DCM4CHE_HOME/lib/dcm4che-codec-${project.version}.jar"
MP="$MP:$DCM4CHE_HOME/lib/slf4j-api-${slf4j.version}.jar"
MP="$MP:$DCM4CHE_HOME/lib/logback-core-${logback.version}.jar"
MP="$MP:$DCM4CHE_HOME/lib/logback-classic-${logback.version}.jar"
MP="$MP:$DCM4CHE_HOME/lib/dcm4che-img-${project.version}.jar"
MP="$MP:$DCM4CHE_HOME/lib/weasis-core-img-${weasis.core.img.version}.jar"
MP="$MP:$DCM4CHE_HOME/lib/picocli-${picocli.version}.jar"

# Setup the native library path
if [ "x$JAVA_LIBRARY_PATH" = "x" ]; then
    OS_ARC=`"$JAVA" -cp $DCM4CHE_HOME/lib/weasis-core-img-${weasis.core.img.version}.jar org.weasis.core.util.NativeLibrary`
    JAVA_LIBRARY_PATH=$DCM4CHE_HOME/lib/${OS_ARC}

    case "$OS_ARC" in
        windows*)
        LIB_NAME=opencv_java
        LIB_EXT=dll
        ;;
        mac*)
        LIB_NAME=libopencv_java
        LIB_EXT=jnilib
        ;;
        *)
        LIB_NAME=libopencv_java
        LIB_EXT=so
        ;;
    esac

    if [ -e "${JAVA_LIBRARY_PATH}/${LIB_NAME}.${LIB_EXT}" ]; then
      echo "Native OpenCV library has been found in ${JAVA_LIBRARY_PATH}/${LIB_NAME}.${LIB_EXT}"
    else
      URL=https://github.com/nroduit/mvn-repo/raw/master/org/weasis/thirdparty/org/opencv/${LIB_NAME}/${weasis.opencv.native.version}/${weasis.opencv.native.version}-${weasis}-${OS_ARC}.${LIB_EXT}
      echo "${JAVA_LIBRARY_PATH}/${LIB_NAME}.${LIB_EXT} is missing. Try to download ${URL}"
      mkdir -p "${JAVA_LIBRARY_PATH}"
      wget --auth-no-challenge -O "${JAVA_LIBRARY_PATH}/${LIB_NAME}.${LIB_EXT}" "${URL}" || { rm "${JAVA_LIBRARY_PATH}/${LIB_NAME}.${LIB_EXT}"; echo "Cannot download the native library related to the architecture ${OS_ARC}, try it manually." && exit 1; }
    fi
fi

# For Cygwin, switch paths to Windows format before running java
if $cygwin; then
    JAVA=`cygpath --path --windows "$JAVA"`
    MP=`cygpath --path --windows "$MP"`
    JAVA_LIBRARY_PATH=`cygpath --path --windows "$JAVA_LIBRARY_PATH"`
fi

# Execute the JVM
exec "$JAVA" $JAVA_OPTS -Djava.library.path="$JAVA_LIBRARY_PATH" -p "$MP" -m $MAIN_MODULE "$@"
